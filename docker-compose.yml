version: '3'
services:
  postgres:
    container_name: postgres
    image: postgres
    restart: on-failure
    env_file:
      - ./server/.env.prod
    ports:
      - '5432:5432'
    networks:
      - taksanet
    volumes:
      - postgres-data:/var/lib/postgresql/data
    profiles:
      - prod
      - dev
      - dev-client
      - dev-server

  studio:
    links:
      - postgres
    depends_on:
      - postgres
    container_name: prisma_studio
    ports:
      - '5555:5555'
    build:
      context: server/prisma
      dockerfile: Dockerfile
    env_file:
      - ./server/.env.prod
    environment:
      API_HOST: postgres
    networks:
      - taksanet
    volumes:
      - /opt/app/prisma
    profiles:
      - dev
      - dev-client
      - dev-server

  server:
    container_name: server
    build:
      dockerfile: Dockerfile
      context: server
    restart: on-failure
    ports:
      - '3200:3200'
    env_file:
      - ./server/.env.prod
    environment:
      API_HOST: postgres
    networks:
      - taksanet
    depends_on:
      - postgres
    profiles:
      - prod
      - dev
      - dev-client

  client:
    container_name: client
    build:
      dockerfile: Dockerfile
      context: client
    restart: on-failure
    ports:
      - '3100:3100'
    networks:
      - taksanet
    depends_on:
      - postgres
    profiles:
      - prod
      - dev
      - dev-server

  proxy:
    container_name: proxy
    build:
      dockerfile: Dockerfile
      context: scripts
    restart: on-failure
    ports:
      - '3000:3000'
    networks:
      - taksanet
    profiles:
      - prod
      - dev

networks:
  taksanet:
volumes:
  postgres-data:
