generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions", "relationJoins"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [pgcrypto]
}

model Team {
  id      String @id @default(uuid()) @db.Uuid
  name    String
  color   String
  members User[]
}

model JwtToken {
  userId String @unique @db.Uuid
  token  String @unique
}

model User {
  id            String   @id @default(uuid()) @db.Uuid
  username      String
  email         String   @unique
  password      String   @db.VarChar(64)
  tgUsername    String?  @unique @db.VarChar(64)
  tgChatId      Int?     @unique
  role          UserRole
  actLink       String   @unique @db.Uuid
  isActivated   Boolean  @default(false)
  clientTasks   Task[]   @relation("clientUser")
  executorTasks Task[]   @relation("executorUser")
  team          Team?    @relation(fields: [teamId], references: [id])
  teamId        String?  @unique @db.Uuid

  @@unique([id, username])
}

model Task {
  id             String         @id @default(uuid()) @db.Uuid
  name           String
  type           TaskType
  status         TaskStatus
  createdAt      DateTime       @default(now())
  deadline       DateTime
  responseId     String         @unique
  executorId     String?        @db.Uuid
  executorName   String?
  formClientName String
  clientId       String?        @db.Uuid
  clientName     String?
  questions      TaskQuestion[]
  client         User?          @relation("clientUser", fields: [clientId, clientName], references: [id, username])
  executor       User?          @relation("executorUser", fields: [executorId, executorName], references: [id, username])
}

model QuestionTemplate {
  id   String @id @default(uuid()) @db.Uuid
  qid  String @unique
  text String
}

model TaskQuestion {
  id           String @id @default(uuid()) @db.Uuid
  questionText String
  answerText   String
  task         Task   @relation(fields: [taskId], references: [id])
  taskId       String @db.Uuid
}

enum UserRole {
  ROOT
  ADMIN
  EXECUTOR
  CLIENT
  NOTDEFINED
}

enum TaskStatus {
  MODIFIED
  WAITCONSENT
  INWORK
  COMPLETED
  VERIFYCOMPLETED
  REJECTED
  VERIFYREJECTED
}

enum TaskType {
  DESIGN
  PHOTO
  VIDEO
  MONTAGE
  POST
}
